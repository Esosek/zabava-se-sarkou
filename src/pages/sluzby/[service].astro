---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

import MainLayout from "../../layouts/MainLayout.astro";
import OrderButton from "../../components/OrderButton.astro";
import Gallery from "../../components/Gallery.astro";

export async function getStaticPaths() {
  const services = await getCollection("services");
  return services.map((service) => ({
    params: { service: service.slug },
    props: { service },
  }));
}

const { service } = Astro.props;
const { title, heroImage, heroImageAlt, price, bottomContent, images } =
  service.data;
const { Content } = await service.render();
---

<MainLayout title={title}>
  <div class="flow">
    <div class=`flow ${heroImage ? 'grid' : ''}`>
      <div>
        <div class="content-wrap">
          <h1>{title}</h1>
          <Content />
        </div>
        <div class="cta-group">
          {
            price && (
              <p class="price">
                Cena od <strong>{price}</strong>
              </p>
            )
          }
          <OrderButton
            selectedService={service.slug}
            style={{ margin: "0.5rem auto" }}
          >
            rezervovat
          </OrderButton>
        </div>
      </div>
      {
        heroImage && (
          <Image
            src={heroImage}
            alt={heroImageAlt ?? ""}
            class="content-img sh-top-small sh-right-small"
          />
        )
      }
    </div>
    {bottomContent && <p>{bottomContent}</p>}
    {images && <Gallery images={images} />}
  </div>
</MainLayout>

<style>
  .grid {
    grid-template-columns: 1fr 1fr;
  }

  .price {
    text-align: center;
    margin-inline: auto;
  }

  .content-img {
    justify-self: center;
  }

  @media only screen and (max-width: 800px) {
    .grid {
      grid-template-columns: 1fr;
    }

    .cta-group {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      background-color: var(--clr-neutral-100);
      z-index: 50;
      padding: 0.3rem 7.5%;
      box-shadow: -5px 5px 20px var(--clr-neutral-400);
    }
  }
</style>

<script>
  const isMobile = window.innerWidth <= 800;
  const footer = document.querySelector("footer");
  const stickyOrderElement = document.querySelector(
    ".cta-group"
  ) as HTMLElement;

  if (isMobile) {
    const stickyHeight = stickyOrderElement.offsetHeight;
    if (footer) footer.style.marginBottom = `${stickyHeight}px`;
  }
</script>
